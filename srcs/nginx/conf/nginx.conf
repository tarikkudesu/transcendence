user www-data;
worker_processes auto;
worker_cpu_affinity auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;

events {
	worker_connections 768;
}

http {
	# ? Docker DNS resolver
	resolver 127.0.0.11 valid=30s ipv6=off;
	include /etc/nginx/mime.types;

	# ? Formatted Logs
	log_format custom_log	'[time_local] $remote_addr $http_host $http_x_forwarded_for | $request | $status | $http_upgrade';
	access_log /debug/access.log custom_log;
	error_log /debug/error.log debug;

	# ? Websocket headers
	map $http_upgrade $connection_upgrade {
    	default upgrade;
    	''      close;
	}

	upstream backend_server {
		server backend:3000;
	}

	# ? HTTPS redirect
	server {
		listen 7080;
		server_name transcendance.pong;
		return 301 https://127.0.0.1:7443$uri;
	}
	server {
		listen 3000 ssl;

		# root /app;
		# index index.html;
		# server_name transcendance.pong;

		# ssl_certificate /etc/nginx/certs/transcendance.crt;
		# ssl_certificate_key /etc/nginx/certs/transcendance.key;
		# ssl_protocols TLSv1.2;

		# ? backend proxy
		location / {
			proxy_pass http://backend_server$uri;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Connection $connection_upgrade;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header Host $host;
			proxy_http_version 1.1;
		}

		# location / {
		# 	try_files $uri $uri/ /index.html;
		# }
	}

	# ? compression with gzip
	gzip on;
	gzip_proxied any;
	gzip_types
		text/plain
		text/css
		text/javascript
		application/javascript
		application/x-javascript
		application/json
		application/xml
		image/svg+xml
		font/ttf
		font/opentype
		font/woff
		font/woff2;
	gzip_vary on;
}
